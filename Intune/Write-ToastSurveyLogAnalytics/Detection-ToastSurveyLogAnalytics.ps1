<#
Version: 1.0
Author: Jannik Reinhard (jannikreinhard.com)
Script: Detection-ToastSurveyLogAnalytics
Description:
Display a toast notification and write the answer into an log analytics workspace
Release notes:
Version 1.0: Init
#> 

#https://www.systanddeploy.com/2022/04/toast-notification-to-notify-users-when.html
Function Register-NotificationApp($AppID,$AppDisplayName) {
    [int]$ShowInSettings = 0
    [int]$IconBackgroundColor = 0
	
	$iconUri = "C:\Windows\ImmersiveControlPanel\images\logo.png"
    $appregPath = "HKCU:\Software\Classes\AppUserModelId"
    $regPath = "$appregPath\$AppID"
	$notificationsReg = 'HKCU:\SOFTWARE\Microsoft\Windows\CurrentVersion\Notifications\Settings'
	If(!(Test-Path -Path "$notificationsReg\$AppID")) 
		{
			New-Item -Path "$notificationsReg\$AppID" -Force
			New-ItemProperty -Path "$notificationsReg\$AppID" -Name 'ShowInActionCenter' -Value 1 -PropertyType 'DWORD' -Force
		}

	If((Get-ItemProperty -Path "$notificationsReg\$AppID" -Name 'ShowInActionCenter' -ErrorAction SilentlyContinue).ShowInActionCenter -ne '1') 
		{
			New-ItemProperty -Path "$notificationsReg\$AppID" -Name 'ShowInActionCenter' -Value 1 -PropertyType 'DWORD' -Force
		}	
		
    try {
        if (-NOT(Test-Path $regPath)) {
            New-Item -Path $appregPath -Name $AppID -Force | Out-Null
        }
        $DisplayName = Get-ItemProperty -Path $regPath -Name DisplayName -ErrorAction SilentlyContinue | Select -ExpandProperty DisplayName -ErrorAction SilentlyContinue
        if ($DisplayName -ne $AppDisplayName) {
            New-ItemProperty -Path $regPath -Name DisplayName -Value $AppDisplayName -PropertyType String -Force | Out-Null
        }
        $ShowInSettingsValue = Get-ItemProperty -Path $regPath -Name ShowInSettings -ErrorAction SilentlyContinue | Select -ExpandProperty ShowInSettings -ErrorAction SilentlyContinue
        if ($ShowInSettingsValue -ne $ShowInSettings) {
            New-ItemProperty -Path $regPath -Name ShowInSettings -Value $ShowInSettings -PropertyType DWORD -Force | Out-Null
        }
		
		New-ItemProperty -Path $regPath -Name iconUri -Value $iconUri -PropertyType ExpandString -Force | Out-Null	
		New-ItemProperty -Path $regPath -Name IconBackgroundColor -Value $IconBackgroundColor -PropertyType ExpandString -Force | Out-Null		
		
    }
    catch {}
}

#https://github.com/damienvanrobaeys/Intune-Proactive-Remediation-scripts/blob/main/Recycle%20Bin%20size%20alert/RecycleBin_Size_Remediation.ps1
Function Create-Action
	{
		param(
		$Action_Name		
		)	
		
		$Main_Reg_Path = "HKCU:\SOFTWARE\Classes\$Action_Name"
		$Command_Path = "$Main_Reg_Path\shell\open\command"
		$CMD_Script = "C:\Users\Public\Documents\$Action_Name.cmd"
		New-Item $Command_Path -Force
		New-ItemProperty -Path $Main_Reg_Path -Name "URL Protocol" -Value "" -PropertyType String -Force | Out-Null
		Set-ItemProperty -Path $Main_Reg_Path -Name "(Default)" -Value "URL:$Action_Name Protocol" -Force | Out-Null
		Set-ItemProperty -Path $Command_Path -Name "(Default)" -Value $CMD_Script -Force | Out-Null		
	}
	

#Encode the image in base64: https://www.base64-image.de/
$tostImageBase64 = ""


############################################# Variables ########################################################
########### Adjust the Variables here ##########################################################################
################################################################################################################
# Toast Text
$tostTitle 		= "Companyname IT Support"
$tostHeadline 	= "Your opinion is important for us."
$tostText 		= "We are continuously working to improve ourselves. This survey is intended to give us feedback."
$tostMessage 	= "`nAre you satisfied with your IT department?"
$tostMessage2 	= "`Support us to improve our services!!"
$toastLogoPath	= "C:\Windows\ImmersiveControlPanel\images\logo.png"
#################################################################################################################

# Path
$scripExecutionPath = "C:\Users\Public\Documents"
$tostImagePath = "$env:TEMP\ToastImage.png"

#################################################################################################################
### PS Script for Action #### Add customerId and sharedKey from the log analytics workspace here ################
#################################################################################################################
$actionScriptPre = @'
	$customerId = "xxxxx"
	$sharedKey = 'xxxxx'
	$logType = "Survey"

	# Log analytics functions
	Function Build-Signature ($customerId, $sharedKey, $date, $contentLength, $method, $contentType, $resource)
	{
		$xHeaders = "x-ms-date:" + $date
		$stringToHash = $method + "`n" + $contentLength + "`n" + $contentType + "`n" + $xHeaders + "`n" + $resource

		$bytesToHash = [Text.Encoding]::UTF8.GetBytes($stringToHash)
		$keyBytes = [Convert]::FromBase64String($sharedKey)

		$sha256 = New-Object System.Security.Cryptography.HMACSHA256
		$sha256.Key = $keyBytes
		$calculatedHash = $sha256.ComputeHash($bytesToHash)
		$encodedHash = [Convert]::ToBase64String($calculatedHash)
		$authorization = 'SharedKey {0}:{1}' -f $customerId,$encodedHash
		return $authorization
	}


	# Create the function to create and post the request
	Function Post-LogAnalyticsData($f_customerId, $f_sharedKey, $f_body, $f_logType)
	{
		$method = "POST"
		$contentType = "application/json"
		$resource = "/api/logs"
		$rfc1123date = [DateTime]::UtcNow.ToString("r")
		$contentLength = $f_body.Length
		$signature = Build-Signature `
			-customerId $f_customerId `
			-sharedKey $f_sharedKey `
			-date $rfc1123date `
			-contentLength $contentLength `
			-method $method `
			-contentType $contentType `
			-resource $resource
		$uri = "https://" + $f_customerId + ".ods.opinsights.azure.com" + $resource + "?api-version=2016-04-01"

		$headers = @{
			"Authorization" = $signature;
			"Log-Type" = $f_logType;
			"x-ms-date" = $rfc1123date;
			"time-generated-field" = "";
		}

		$response = Invoke-WebRequest -Uri $uri -Method $method -ContentType $contentType -Headers $headers -Body $f_body -UseBasicParsing
		return $response.StatusCode

	}

	$Properties = [Ordered] @{
		"UserName"      = $env:UserName
		"Computername"  = $env:computername
		"SurveyAnswer"  = "
'@
		
$actionScriptPost = @'
"	
	}
	$surveyResultJson = (New-Object -TypeName "PSObject" -Property $Properties) | ConvertTo-Json

	$params = @{
		f_customerId = $customerId
		f_sharedKey  = $sharedKey
		f_body       = ([System.Text.Encoding]::UTF8.GetBytes($surveyResultJson))
		f_logType    = $logType 
	}
	$logResponse = Post-LogAnalyticsData @params
	Remove-Item C:\Users\Public\Documents\ActionYes.ps1 -Force 
	Remove-Item C:\Users\Public\Documents\ActionPartly.ps1 -Force 
	Remove-Item C:\Users\Public\Documents\ActionNo.ps1 -Force
	Remove-Item C:\Users\Public\Documents\ActionYes.cmd -Force 
	Remove-Item C:\Users\Public\Documents\ActionPartly.cmd -Force 
	Remove-Item C:\Users\Public\Documents\ActionNo.cmd -Force
'@

# Call the PS1 with an CMD script
$actionScriptCmdYes = @'
Powershell.exe -executionpolicy Bypass -File C:\Users\Public\Documents\ActionYes.ps1
'@

$actionScriptCmdPartly = @'
Powershell.exe -executionpolicy Bypass -File C:\Users\Public\Documents\ActionPartly.ps1
'@

$actionScriptCmdNo = @'
Powershell.exe -executionpolicy Bypass -File C:\Users\Public\Documents\ActionNo.ps1
'@

#################################################################################################################
###################################################### Main #####################################################
#################################################################################################################

# Action Yes
($actionScriptPre + "Yes" + $actionScriptPost) | out-file "$scripExecutionPath\ActionYes.ps1" -Force -Encoding ASCII
$actionScriptCmdYes | out-file "$scripExecutionPath\ActionYes.cmd" -Force -Encoding ASCII
Create-Action -Action_Name ActionYes

# Action Partly
($actionScriptPre + "Partly" + $actionScriptPost) | out-file "$scripExecutionPath\ActionPartly.ps1" -Force -Encoding ASCII
$actionScriptCmdPartly | out-file "$scripExecutionPath\ActionPartly.cmd" -Force -Encoding ASCII
Create-Action -Action_Name ActionPartly

# Action No
($actionScriptPre + "No" + $actionScriptPost) | out-file "$scripExecutionPath\ActionNo.ps1" -Force -Encoding ASCII
$actionScriptCmdNo | out-file "$scripExecutionPath\ActionNo.cmd" -Force -Encoding ASCII
Create-Action -Action_Name ActionNo


# Create png file from Base 64 string
[byte[]]$Bytes = [convert]::FromBase64String($tostImageBase64)
[System.IO.File]::WriteAllBytes($tostImagePath,$Bytes)	

# Create toast notification XML
[xml]$toast = @"
<toast scenario="reminder">
    <visual>
    <binding template="ToastGeneric">
        <image placement="hero" src="$tostImagePath"/>
		<image placement="appLogoOverride" hint-crop="circle" src="$toastLogoPath"/>
		<text>$tostHeadline</text>
        <text>$tostText</text>
        <group>
            <subgroup>     
                <text hint-style="body" hint-wrap="true" >$tostMessage</text>
            </subgroup>
        </group>
		
		<group>				
			<subgroup>     
				<text hint-style="body" hint-wrap="true" >$tostMessage2</text>								
			</subgroup>				
		</group>				
    </binding>
    </visual>
	<actions>
		<action activationType="protocol" arguments="ActionYes:" content="Yes" />		
		<action activationType="protocol" arguments="ActionPartly:" content="Partly" />
		<action activationType="protocol" arguments="ActionNo:" content="No" />	
	</actions>	
</toast>
"@	


Register-NotificationApp -AppID $tostTitle -AppDisplayName $tostTitle

# Create toast
$load = [Windows.UI.Notifications.ToastNotificationManager, Windows.UI.Notifications, ContentType = WindowsRuntime]
$load = [Windows.Data.Xml.Dom.XmlDocument, Windows.Data.Xml.Dom.XmlDocument, ContentType = WindowsRuntime]
$toastXml = New-Object -TypeName Windows.Data.Xml.Dom.XmlDocument
$toastXml.LoadXml($toast.OuterXml)

# Show the Toast
[Windows.UI.Notifications.ToastNotificationManager]::CreateToastNotifier($tostTitle).Show($toastXml)